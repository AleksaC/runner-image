#!/usr/bin/env python3
import argparse
import os.path
import subprocess
import tempfile


def test_can_build_python_tools(tag: str, pc: str, *, podman: bool) -> None:
    user = () if podman else ('--user', f'{os.getuid()}:{os.getgid()}')
    subprocess.check_call((
        'docker', 'run', '--rm',
        *user,
        '--volume', f'{os.getcwd()}:/git:ro',
        '--volume', f'{pc}:/pc:rw',
        '--workdir', '/git',
        tag, 'pre-commit', 'install-hooks',
    ))


def test_can_run_python_tools(tag: str, pc: str, *, podman: bool) -> None:
    user = () if podman else ('--user', f'{os.getuid()}:{os.getgid()}')
    subprocess.check_call((
        'docker', 'run', '--rm',
        *user,
        '--volume', f'{os.getcwd()}:/git:rw',
        '--volume', f'{pc}:/pc:ro',
        '--workdir', '/git',
        tag, 'pre-commit', 'run', '--all-files', '--show-diff-on-failure',
    ))


def test_considers_system_ruby_suitable(tag: str) -> None:
    output = subprocess.check_output((
        'docker', 'run', '--rm',
        tag, 'python3', '-c',
        'import pre_commit.languages.ruby;'
        'print(pre_commit.languages.ruby.get_default_version())',
    ))
    assert output == b'system\n', output


def main() -> int:
    parser = argparse.ArgumentParser()
    parser.add_argument('--podman', action='store_true')
    parser.add_argument('tag')
    args = parser.parse_args()

    with tempfile.TemporaryDirectory() as pc:
        print(' can build python tools '.center(79, '='), flush=True)
        test_can_build_python_tools(args.tag, pc, podman=args.podman)
        print(' can run python tools '.center(79, '='), flush=True)
        test_can_run_python_tools(args.tag, pc, podman=args.podman)
        print(' considers system ruby suitable '.center(79, '='), flush=True)
        test_considers_system_ruby_suitable(args.tag)

    return 0


if __name__ == '__main__':
    exit(main())
