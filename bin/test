#!/usr/bin/env python3
import argparse
import contextlib
import os.path
import subprocess
import tempfile
from typing import Generator

PRE_COMMIT_CONFIG = '''\
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.2.0
    hooks:
    -   id: trailing-whitespace
'''


@contextlib.contextmanager
def git_dir() -> Generator[str, None, None]:
    with tempfile.TemporaryDirectory() as tmpdir:
        subprocess.check_call(('git', 'init', '--quiet', tmpdir))

        with open(os.path.join(tmpdir, '.pre-commit-config.yaml'), 'w') as f:
            f.write(PRE_COMMIT_CONFIG)

        with open(os.path.join(tmpdir, 't.py'), 'w') as f:
            f.write('print("hello world")\n')

        subprocess.check_call(('git', '-C', tmpdir, 'add', '.'))

        yield tmpdir


def test_can_build_python_tools(tag: str, pc: str) -> None:
    subprocess.check_call((
        'docker', 'run', '--rm',
        '--user', f'{os.getuid()}:{os.getgid()}',
        '--volume', f'{os.getcwd()}:/git:ro',
        '--volume', f'{pc}:/pc:rw',
        '--workdir', '/git',
        tag, 'pre-commit', 'install-hooks',
    ))


def test_can_run_built_python_tools(tag: str, pc: str) -> None:
    subprocess.check_call((
        'docker', 'run', '--rm',
        '--user', f'{os.getuid()}:{os.getgid()}',
        '--volume', f'{os.getcwd()}:/git:rw',
        '--volume', f'{pc}:/pc:ro',
        '--workdir', '/git',
        tag, 'pre-commit', 'run', '--all-files', '--show-diff-on-failure',
    ))


def main() -> int:
    parser = argparse.ArgumentParser()
    parser.add_argument('tag')
    args = parser.parse_args()

    with tempfile.TemporaryDirectory() as pc:
        print(' can build python tools '.center(79, '='), flush=True)
        test_can_build_python_tools(args.tag, pc)
        print(' can run built python tools '.center(79, '='), flush=True)
        test_can_run_built_python_tools(args.tag, pc)

    return 0


if __name__ == '__main__':
    exit(main())
